USE ShopDB
GO

CREATE TABLE JoinTest1
(id_jt1 int,
 name varchar(50));
GO

CREATE TABLE JoinTest2
(id_jt2 int,
 name varchar(50));
GO

INSERT JoinTest1
VALUES  (1,'one'),
		(2,'two'),
		(3,'three'),
		(4,'four'),
		(5,'five'),
		(9,'nine'),
		(10,'ten');

INSERT JoinTest2
VALUES  (1,'one'),
		(2,'two'),
		(3,'three'),
		(4,'four'),
		(5,'five'),
		(6,'six'),
		(7,'seven'),
		(8,'eight');
select * from JoinTest1;
select * from JoinTest2;



-------------------------------------------------------------------------
--                            INNER JOIN  
-------------------------------------------------------------------------

-- INNER JOIN (внутреннее объединение) - объединение, при котором 
--   в запросе все записи из таблицы на левой и правой стороне операции 
--   INNER JOIN добавляются в результирующий набор записей, при соответствии 
--   условию значений в связанных полях.

-- Производим выборку всех данных из объеденения таблиц JoinTest1 и JoinTest2 
-- по связующим полям id_jt1 и id_jt2.

SELECT * FROM 
			  JoinTest2	  -- Левая таблица (Таблица JoinTest2)
			  INNER JOIN  -- Оператор объединения.
			  JoinTest1	  -- Правая таблица(Таблица JoinTest1)
ON id_jt1 = id_jt2;		  -- Условие объединения при котором значения в сравниваемых ячейках должны совпадать. 
GO

-------------------------------------------------------------------------
--                LEFT OUTER JOIN, RIGHT OUTER JOIN  
-------------------------------------------------------------------------

-- LEFT OUTER JOIN (левое внешнее объединение) - внешнее объединение, при котором 
--   в запросе все записи из таблицы на левой стороне операции LEFT JOIN в 
--   инструкции SQL добавляются в результирующий набор записей, даже если в 
--   таблице на правой стороне отсутствуют совпадающие значения в связанных полях.

-- Производим выборку всех данных из результирующего набора данных  левого внешнего 
-- объеденения таблиц JoinTest1 и JoinTest2 по связующим полям id_jt1 и id_jt2.

SELECT * FROM JoinTest2	 -- Левая таблица JoinTest2
    LEFT OUTER JOIN JoinTest1	 -- LEFT JOIN
ON id_jt1=id_jt2;
GO


-- RIGHT OUTER JOIN (правое внешнее объединение) - внешнее объединение, при котором 
--   в запросе все записи из таблицы на правой стороне операции RIGHT JOIN в 
--   инструкции SQL добавляются в результирующий набор записей, даже если в 
--   таблице на левой стороне отсутствуют совпадающие значения в связанных полях.

-- Производим выборку всех данных из результирующего набора данных правого внешнего 
-- объеденения таблиц JoinTest1 и JoinTest2 по связующим полям id_jt1 и id_jt2.

SELECT * FROM JoinTest2	
   RIGHT OUTER JOIN JoinTest1 -- Правая таблица JoinTest2
ON id_jt1 = id_jt2;
GO


-------------------------------------------------------------------------
--                       FULL OUTER JOIN 
-------------------------------------------------------------------------

-- FULL OUTER JOIN (полное обединение) внешнее объединение, при котором 
--   в запросе все записи из таблицы на левой и правой стороне операции 
--   FULL JOIN добавляются в результирующий набор записей, при соотвецтвии 
--   условию значений в связанных полях,а так же:
--		- значения из перавой таблицы, не имеющие соответствий в левой таблице;
--		- значения из левой таблицы, не имеющие соответствий в правой таблице. 

SELECT * 
FROM JoinTest2
FULL OUTER JOIN JoinTest1	 --FULL JOIN
ON id_jt1 = id_jt2;
GO


-------------------------------------------------------------------------
--                           CROSS JOIN 
-------------------------------------------------------------------------

-- CROSS JOIN (перекрестное обединение) - выполняет декартово произведение таблиц, 
-- вовлеченных в объединение. В CROSS JOIN не используется консрукция ON.

-- Производим выборку всех данных из результирующего набора данных перекрестного 
-- объеденения таблиц JoinTest1 и JoinTest2.

SELECT * FROM JoinTest1
   CROSS JOIN JoinTest2 -- CROSS JOIN
-- ON - не используется 
GO